{"version":3,"sources":["components/Image.js","components/Timer.js","components/Sidebar.js","data/raidthree.js","firebase.js","App.js","serviceWorker.js","index.js","assets/raidthree.png","assets/previews/Alpha_5.png","assets/previews/Astro.png","assets/previews/Baby_Yoda.jpg","assets/previews/Bill_and_Ted.jpg","assets/previews/Owl.jpg"],"names":["Image","props","React","useState","anchorEl","setAnchorEl","data","charsLeft","setCharsLeft","clicked","setClicked","openDialog","setOpenDialog","openMenu","event","selectionDiv","document","createElement","setAttribute","style","position","left","pageX","top","pageY","width","height","border","borderRadius","body","append","target","id","closeMenu","dataset","markFound","filter","char","setMenuItems","menuItems","map","item","found","setRecent","name","openNotification","chars","every","val","i","arr","stopTimer","getElementById","parentNode","removeChild","aria-controls","aria-haspopup","onClick","src","image","alt","useMap","title","coords","shape","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","MenuItem","data-id","key","Dialog","aria-labelledby","DialogTitle","DialogContent","minWidth","DialogContentText","time","DialogActions","Button","location","reload","color","Timer","state","startTime","timeElapsed","checkForTimer","setInterval","timerIsRunning","clearInterval","setState","toDate","Date","timer","format","differenceInMilliseconds","setTime","saveData","ListItemText","primary","this","Component","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","table","HtmlTooltip","withStyles","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","Tooltip","margin","closeButton","right","palette","grey","children","classes","other","disableTypography","className","Typography","variant","IconButton","aria-label","MuiDialogContent","MuiDialogActions","Sidebar","openSnackbar","setOpenSnackbar","recent","openHighScores","setOpenHighScores","closeSnackbar","reason","closeHighScores","CssBaseline","AppBar","Toolbar","noWrap","Drawer","paper","List","ListItem","ListItemIcon","button","Divider","subheader","ListSubheader","textAlign","placement","disabled","textDecoration","Fragment","link","reference","window","ListItemSecondaryAction","Snackbar","autoHideDuration","message","action","size","paragraph","form","closeForm","TextField","onChange","validateTextField","autoFocus","label","type","fullWidth","required","autoComplete","helperText","onKeyUp","e","playerName","dividers","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","highScores","score","index","Chip","icon","scope","player","alpha5","astroBoy","babyYoda","billAndTed","owl","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","App","newData","setTimeout","value","trim","length","collection","add","then","docRef","console","log","catch","error","getData","dbScores","orderBy","limit","get","querySnapshot","forEach","doc","push","raidthree","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.497fd873.chunk.js","sourcesContent":["import { Menu, MenuItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport image from \"../assets/raidthree.png\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst Image = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [charsLeft, setCharsLeft] = React.useState(props.data);\n  const [clicked, setClicked] = React.useState(null);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  const openMenu = (event) => {\n    // Create selection div\n    const selectionDiv = document.createElement(\"div\");\n    selectionDiv.setAttribute(\"id\", \"selection-div\");\n    selectionDiv.style.position = \"absolute\";\n    selectionDiv.style.left = event.pageX - 50 + \"px\";\n    selectionDiv.style.top = event.pageY - 50 + \"px\";\n    selectionDiv.style.width = \"100px\";\n    selectionDiv.style.height = \"100px\";\n    selectionDiv.style.border = \"3px dashed #000\";\n    selectionDiv.style.borderRadius = \"50%\";\n    document.body.append(selectionDiv);\n    setAnchorEl(selectionDiv);\n\n    if (event.target.id) {\n      setClicked(event.target.id);\n    }\n  };\n\n  const closeMenu = (event) => {\n    if (event.target.dataset.id === clicked) {\n      // Update App state\n      props.markFound(event.target.dataset.id);\n      setCharsLeft(\n        charsLeft.filter((char) => char.id !== event.target.dataset.id)\n      );\n      // Update Sidebar state\n      props.setMenuItems(\n        props.menuItems.map((item) => {\n          if (item.id === event.target.dataset.id) {\n            item.found = true;\n            props.setRecent(item.name);\n          }\n          return item;\n        })\n      );\n      props.openNotification(true);\n      const status = charsLeft.map((chars) => chars.found);\n      const allFound = status.every((val, i, arr) => val === arr[0]);\n      if (allFound) {\n        props.stopTimer();\n        setOpenDialog(true);\n      }\n    }\n\n    // Delete selection div\n    const selectionDiv = document.getElementById(\"selection-div\");\n    selectionDiv.parentNode.removeChild(selectionDiv);\n    setAnchorEl(null);\n  };\n\n  const closeDialog = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <div>\n      <img\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={openMenu}\n        src={image}\n        alt=\"Raid Three\"\n        useMap=\"#image-map\"\n      />\n      <map name=\"image-map\">\n        <area\n          id=\"alpha-5\"\n          onClick={openMenu}\n          alt=\"Alpha 5\"\n          title=\"Alpha 5\"\n          coords=\"968,862,849,941\"\n          shape=\"rect\"\n        />\n        <area\n          id=\"astro-boy\"\n          onClick={openMenu}\n          alt=\"Astro Boy\"\n          title=\"Astro Boy\"\n          coords=\"297,1332,278,1295\"\n          shape=\"rect\"\n        />\n        <area\n          id=\"baby-yoda\"\n          onClick={openMenu}\n          alt=\"Baby Yoda\"\n          title=\"Baby Yoda\"\n          coords=\"118,881,69,906\"\n          shape=\"rect\"\n        />\n        <area\n          id=\"bill-and-ted\"\n          onClick={openMenu}\n          alt=\"Bill &amp; Ted\"\n          title=\"Bill &amp; Ted\"\n          coords=\"260,1369,98,1471\"\n          shape=\"rect\"\n        />\n        <area\n          id=\"owl\"\n          onClick={openMenu}\n          alt=\"Owl\"\n          title=\"Owl\"\n          coords=\"30,106,62,182\"\n          shape=\"rect\"\n        />\n      </map>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeMenu}\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"center\",\n          horizontal: \"left\",\n        }}\n        getContentAnchorEl={null}\n      >\n        {charsLeft.map((char) => (\n          <MenuItem data-id={char.id} key={char.id} onClick={closeMenu}>\n            {char.name}\n          </MenuItem>\n        ))}\n      </Menu>\n      <Dialog\n        open={openDialog}\n        onClose={closeDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Congratulations!</DialogTitle>\n        <DialogContent style={{ minWidth: 550 }}>\n          <DialogContentText>\n            {\"You found all targets in \"}\n            <strong>{props.time}</strong>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => document.location.reload()} color=\"primary\">\n            Play Again\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Image;\n","import React, { Component } from \"react\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { toDate, format, differenceInMilliseconds } from \"date-fns\";\n\nexport class Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: null,\n      timeElapsed: \"00:00:00\",\n    };\n  }\n\n  componentDidMount() {\n    const checkForTimer = setInterval(() => {\n      if (this.props.timerIsRunning) {\n        clearInterval(checkForTimer);\n        this.setState({\n          startTime: toDate(new Date()),\n        });\n        const timer = setInterval(() => {\n          this.setState({\n            timeElapsed: format(\n              differenceInMilliseconds(new Date(), this.state.startTime),\n              \"mm:ss:SS\"\n            ),\n          });\n          if (!this.props.timerIsRunning) {\n            clearInterval(timer);\n            this.props.setTime(this.state.timeElapsed);\n            this.props.saveData();\n          }\n        }, 1);\n      }\n    }, 1);\n  }\n\n  render() {\n    return <ListItemText primary={this.state.timeElapsed} />;\n  }\n}\n\nexport default Timer;\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport ScoreIcon from \"@material-ui/icons/Score\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport Chip from \"@material-ui/core/Chip\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\n\nimport Image from \"./Image\";\nimport Timer from \"./Timer\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  table: {\n    minWidth: 550,\n  },\n}));\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst Sidebar = (props) => {\n  const classes = useStyles();\n  const [menuItems, setMenuItems] = React.useState(props.data);\n\n  const listItemClick = (link) => {\n    window.open(link);\n  };\n\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [recent, setRecent] = React.useState(null);\n\n  const [openHighScores, setOpenHighScores] = React.useState(false);\n\n  const closeSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const closeHighScores = () => {\n    setOpenHighScores(false);\n  };\n\n  const keyPress = (e) => {\n    if (e.key === \"Enter\") {\n      props.closeForm();\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            scit (/sīt/)\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            <ListItem>\n              <ListItemIcon>\n                <TimerIcon />\n              </ListItemIcon>\n              <Timer\n                timerIsRunning={props.timerIsRunning}\n                setTime={props.setTime}\n                saveData={props.saveData}\n              />\n            </ListItem>\n            <ListItem button onClick={() => setOpenHighScores(true)}>\n              <ListItemIcon>\n                <ScoreIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"High Scores\" />\n            </ListItem>\n          </List>\n          <Divider />\n          <List\n            subheader={\n              <ListSubheader style={{ textAlign: \"start\" }}>Find</ListSubheader>\n            }\n          >\n            {menuItems.map((item) =>\n              item.found === true ? (\n                <Tooltip\n                  key={item.id}\n                  title={`You already found ${item.name}!`}\n                  placement=\"right\"\n                >\n                  <ListItem disabled>\n                    <ListItemText\n                      style={{ textDecoration: \"line-through\" }}\n                      primary={item.name}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ) : (\n                <HtmlTooltip\n                  key={item.id}\n                  title={\n                    <React.Fragment>\n                      <img width=\"100%\" src={item.image} alt={item.name} />\n                      <Typography color=\"inherit\">{item.name}</Typography>\n                    </React.Fragment>\n                  }\n                  placement=\"right\"\n                >\n                  <ListItem\n                    onClick={() => listItemClick(item.reference)}\n                    button\n                  >\n                    <ListItemText primary={item.name} />\n                    <ListItemSecondaryAction>\n                      <OpenInNewIcon fontSize=\"small\" />\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                </HtmlTooltip>\n              )\n            )}\n          </List>\n        </div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          open={openSnackbar}\n          autoHideDuration={3000}\n          onClose={closeSnackbar}\n          message={`You found ${recent}!`}\n          action={\n            <React.Fragment>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={closeSnackbar}\n              >\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Typography paragraph>\n          {\"The Raid 3: Scourge of the Machines - by Laurie Greasley\"}\n        </Typography>\n        <Dialog\n          open={props.form}\n          onClose={props.closeForm}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Welcome!</DialogTitle>\n          <DialogContent style={{ minWidth: 550 }}>\n            <DialogContentText>\n              To start playing, please enter your name here.\n            </DialogContentText>\n            <TextField\n              onChange={props.validateTextField}\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n              required\n              autoComplete=\"off\"\n              helperText=\"Player name is required to save scores.\"\n              onKeyUp={keyPress}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={props.closeForm}\n              color=\"primary\"\n              disabled={props.playerName === null}\n            >\n              Play\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Image\n          data={props.data}\n          markFound={props.markFound}\n          menuItems={menuItems}\n          setMenuItems={setMenuItems}\n          openNotification={setOpenSnackbar}\n          setRecent={setRecent}\n          stopTimer={props.stopTimer}\n          time={props.time}\n          playerName={props.playerName}\n        />\n        <Dialog\n          onClose={closeHighScores}\n          aria-labelledby=\"customized-dialog-title\"\n          open={openHighScores}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={closeHighScores}>\n            High Scores\n          </DialogTitle>\n          <DialogContent dividers>\n            <TableContainer component={Paper}>\n              <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Rank</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Time</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.highScores.map((score, index) =>\n                    index === 0 ? (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <Chip\n                            label={index + 1}\n                            style={{ backgroundColor: \"#ffd700\" }}\n                            icon={<StarsIcon />}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {score.player}\n                        </TableCell>\n                        <TableCell>{score.time}</TableCell>\n                      </TableRow>\n                    ) : index === 1 ? (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <Chip\n                            label={index + 1}\n                            style={{ backgroundColor: \"#c0c0c0\" }}\n                            icon={<StarsIcon />}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {score.player}\n                        </TableCell>\n                        <TableCell>{score.time}</TableCell>\n                      </TableRow>\n                    ) : index === 2 ? (\n                      <TableRow key={index}>\n                        <TableCell>\n                          <Chip\n                            label={index + 1}\n                            style={{ backgroundColor: \"#cd7f32\" }}\n                            icon={<StarsIcon />}\n                          />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {score.player}\n                        </TableCell>\n                        <TableCell>{score.time}</TableCell>\n                      </TableRow>\n                    ) : (\n                      <TableRow key={index}>\n                        <TableCell>{index + 1}</TableCell>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {score.player}\n                        </TableCell>\n                        <TableCell>{score.time}</TableCell>\n                      </TableRow>\n                    )\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={closeHighScores} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </main>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import alpha5 from \"../assets/previews/Alpha_5.png\";\nimport astroBoy from \"../assets/previews/Astro.png\";\nimport babyYoda from \"../assets/previews/Baby_Yoda.jpg\";\nimport billAndTed from \"../assets/previews/Bill_and_Ted.jpg\";\nimport owl from \"../assets/previews/Owl.jpg\";\n\nconst data = [\n  {\n    id: \"alpha-5\",\n    name: \"Alpha 5\",\n    image: alpha5,\n    reference: \"https://powerrangers.fandom.com/wiki/Alpha_5\",\n    found: false,\n  },\n  {\n    id: \"astro-boy\",\n    name: \"Astro Boy\",\n    image: astroBoy,\n    reference: \"https://astroboy.fandom.com/wiki/Astro_Boy_(character)\",\n    found: false,\n  },\n  {\n    id: \"baby-yoda\",\n    name: \"Baby Yoda\",\n    image: babyYoda,\n    reference: \"https://starwars.fandom.com/wiki/The_Child\",\n    found: false,\n  },\n  {\n    id: \"bill-and-ted\",\n    name: \"Bill & Ted\",\n    image: billAndTed,\n    reference: \"https://www.imdb.com/title/tt0101452/\",\n    found: false,\n  },\n  {\n    id: \"owl\",\n    name: \"Owl\",\n    image: owl,\n    reference: \"https://bladerunner.fandom.com/wiki/Owl\",\n    found: false,\n  },\n];\n\nexport default data;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSEGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\nexport const db = firebase.firestore();\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport raidthree from \"./data/raidthree\";\nimport { db } from \"./firebase\";\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: raidthree,\n      timerIsRunning: false,\n      time: null,\n      form: true,\n      playerName: null,\n      highScores: [],\n    };\n  }\n\n  markFound = (id) => {\n    const newData = this.state.data.map((data) => {\n      if (data.id === id) {\n        data.found = true;\n      }\n      return data;\n    });\n\n    this.setState({\n      data: newData,\n    });\n  };\n\n  stopTimer = () => {\n    this.setState({\n      timerIsRunning: false,\n    });\n  };\n\n  setTime = (time) => {\n    this.setState({\n      time,\n    });\n  };\n\n  closeForm = () => {\n    if (this.state.playerName) {\n      this.setState({\n        form: false,\n      });\n      setTimeout(() => {\n        this.setState({\n          timerIsRunning: true,\n        });\n      }, 1000);\n    }\n  };\n\n  validateTextField = (e) => {\n    if (\n      e.target.value.trim() !== \"\" &&\n      e.target.value !== null &&\n      e.target.value.trim().length < 32\n    ) {\n      this.setState({\n        playerName: e.target.value.trim(),\n      });\n    } else {\n      this.setState({\n        playerName: null,\n      });\n    }\n  };\n\n  saveData = () => {\n    db.collection(\"scores\")\n      .add({\n        player: this.state.playerName,\n        time: this.state.time,\n      })\n      .then(function (docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n      })\n      .catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  getData = () => {\n    let dbScores = [];\n\n    db.collection(\"scores\")\n      .orderBy(\"time\", \"asc\")\n      .limit(10)\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          dbScores.push(doc.data());\n        });\n      });\n\n    this.setState({\n      highScores: dbScores,\n    });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Sidebar\n          data={this.state.data}\n          markFound={this.markFound}\n          timerIsRunning={this.state.timerIsRunning}\n          stopTimer={this.stopTimer}\n          setTime={this.setTime}\n          form={this.state.form}\n          playerName={this.state.playerName}\n          closeForm={this.closeForm}\n          validateTextField={this.validateTextField}\n          time={this.state.time}\n          saveData={this.saveData}\n          highScores={this.state.highScores}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/raidthree.c260966d.png\";","module.exports = __webpack_public_path__ + \"static/media/Alpha_5.d89b8588.png\";","module.exports = __webpack_public_path__ + \"static/media/Astro.e42031cc.png\";","module.exports = __webpack_public_path__ + \"static/media/Baby_Yoda.0802dc4c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bill_and_Ted.5fe5e4b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Owl.0fe877b2.jpg\";"],"sourceRoot":""}